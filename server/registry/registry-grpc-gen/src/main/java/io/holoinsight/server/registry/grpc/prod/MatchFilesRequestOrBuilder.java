/*
 * Copyright 2022 Holoinsight Project Authors. Licensed under Apache-2.0.
 */
// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: registry-for-prod.proto

package io.holoinsight.server.registry.grpc.prod;

public interface MatchFilesRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:io.holoinsight.server.registry.grpc.prod.MatchFilesRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.io.holoinsight.server.common.grpc.CommonRequestHeader header = 1;</code>
   */
  boolean hasHeader();

  /**
   * <code>.io.holoinsight.server.common.grpc.CommonRequestHeader header = 1;</code>
   */
  io.holoinsight.server.common.grpc.CommonRequestHeader getHeader();

  /**
   * <code>.io.holoinsight.server.common.grpc.CommonRequestHeader header = 1;</code>
   */
  io.holoinsight.server.common.grpc.CommonRequestHeaderOrBuilder getHeaderOrBuilder();

  /**
   * <code>string agent_id = 2;</code>
   */
  java.lang.String getAgentId();

  /**
   * <code>string agent_id = 2;</code>
   */
  com.google.protobuf.ByteString getAgentIdBytes();

  /**
   * <pre>
   * path / format / glob / regexp
   * </pre>
   *
   * <code>string type = 3;</code>
   */
  java.lang.String getType();

  /**
   * <pre>
   * path / format / glob / regexp
   * </pre>
   *
   * <code>string type = 3;</code>
   */
  com.google.protobuf.ByteString getTypeBytes();

  /**
   * <pre>
   * used when type in (path,format,glob,regexp)
   * </pre>
   *
   * <code>string pattern = 4;</code>
   */
  java.lang.String getPattern();

  /**
   * <pre>
   * used when type in (path,format,glob,regexp)
   * </pre>
   *
   * <code>string pattern = 4;</code>
   */
  com.google.protobuf.ByteString getPatternBytes();

  /**
   * <pre>
   * used when type=regexp
   * </pre>
   *
   * <code>string dir = 5;</code>
   */
  java.lang.String getDir();

  /**
   * <pre>
   * used when type=regexp
   * </pre>
   *
   * <code>string dir = 5;</code>
   */
  com.google.protobuf.ByteString getDirBytes();

  /**
   * <pre>
   * used when glob&amp;regexp
   * </pre>
   *
   * <code>int32 maxVisited = 6;</code>
   */
  int getMaxVisited();

  /**
   * <pre>
   * used when glob&amp;regexp
   * </pre>
   *
   * <code>int32 maxMatched = 7;</code>
   */
  int getMaxMatched();

  /**
   * <code>.io.holoinsight.server.registry.grpc.prod.TargetIdentifier target = 8;</code>
   */
  boolean hasTarget();

  /**
   * <code>.io.holoinsight.server.registry.grpc.prod.TargetIdentifier target = 8;</code>
   */
  io.holoinsight.server.registry.grpc.prod.TargetIdentifier getTarget();

  /**
   * <code>.io.holoinsight.server.registry.grpc.prod.TargetIdentifier target = 8;</code>
   */
  io.holoinsight.server.registry.grpc.prod.TargetIdentifierOrBuilder getTargetOrBuilder();
}
